name: Tests on PR

on:
    pull_request:
        branches: [main, develop]
    push:
        branches: [main, develop]

jobs:
    test:
        name: Run Tests
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [18.x, 20.x]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "npm"

            - name: Install Meteor
              run: |
                  curl https://install.meteor.com/ | sh
                  export PATH="$HOME/.meteor:$PATH"

            - name: Cache Meteor packages
              uses: actions/cache@v3
              with:
                  path: ~/.meteor
                  key: meteor-${{ runner.os }}-${{ hashFiles('.meteor/versions') }}
                  restore-keys: |
                      meteor-${{ runner.os }}-

            - name: Install dependencies
              run: |
                  export PATH="$HOME/.meteor:$PATH"
                  meteor npm install

            - name: Check for security vulnerabilities
              run: |
                  export PATH="$HOME/.meteor:$PATH"
                  meteor npm audit --audit-level=high

            - name: Run security tests
              run: |
                  export PATH="$HOME/.meteor:$PATH"
                  # Test that security files are present
                  test -f server/security.js || exit 1
                  test -f SECURITY.md || exit 1
                  test -f test-security.js || exit 1
                  echo "✅ Security files present"

            - name: Build application
              run: |
                  export PATH="$HOME/.meteor:$PATH"
                  meteor build --directory ../build --server-only

            - name: Test build artifacts
              run: |
                  test -d ../build || exit 1
                  test -f ../build/bundle/main.js || exit 1
                  echo "✅ Build successful"

    lint:
        name: Code Quality
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20.x"
                  cache: "npm"

            - name: Install Meteor
              run: |
                  curl https://install.meteor.com/ | sh
                  export PATH="$HOME/.meteor:$PATH"

            - name: Install dependencies
              run: |
                  export PATH="$HOME/.meteor:$PATH"
                  meteor npm install

            - name: Check JavaScript syntax
              run: |
                  # Check for basic syntax errors
                  node -c refract.js
                  node -c server/security.js
                  node -c test-security.js
                  echo "✅ JavaScript syntax valid"

            - name: Check security configuration
              run: |
                  # Verify security settings are present
                  grep -q "rate.*limit" server/security.js || exit 1
                  grep -q "Content-Security-Policy" server/security.js || exit 1
                  grep -q "X-Frame-Options" server/security.js || exit 1
                  echo "✅ Security configuration verified"

    security-scan:
        name: Security Scan
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Run Trivy vulnerability scanner
              uses: aquasecurity/trivy-action@master
              with:
                  scan-type: "fs"
                  scan-ref: "."
                  format: "sarif"
                  output: "trivy-results.sarif"

            - name: Upload Trivy scan results
              uses: github/codeql-action/upload-sarif@v2
              if: always()
              with:
                  sarif_file: "trivy-results.sarif"
